from flask import Flask, request, jsonify
import os
import requests
import time
import threading

app = Flask(__name__)

# ================================
# üî∞ –¢–æ–∫–µ–Ω Telegram –∏–∑ Render Environment
# ================================
BOT_TOKEN = os.getenv("BOT_TOKEN")

# ================================
# üî∞ –®–∞–≥–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
# ================================
LOADING_STEPS = [
    ("Conexi√≥n al sistema...", 0),
    ("Verificaci√≥n de registro...", 12),
    ("Verificaci√≥n de dep√≥sito...", 25),
    ("An√°lisis del historial de apuestas...", 40),
    ("Conexi√≥n de la cuenta a Lucky Mines...", 55),
    ("Recolecci√≥n de datos del algoritmo de ubicaci√≥n de minas...", 70),
    ("Creaci√≥n de la primera se√±al...", 88),
    ("‚úÖ Acceso al hackbot concedido.", 100),
]

# ================================
# üî∞ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
# ================================
def make_progress_bar(percent: int, length: int = 20) -> str:
    filled = int(length * percent / 100)
    empty = length - filled
    return f"[{'‚ñà' * filled}{'‚ñí' * empty}] {percent}%"

# ================================
# üî∞ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
# ================================
def send_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {"chat_id": chat_id, "text": text, "parse_mode": "HTML"}
    try:
        requests.post(url, json=payload, timeout=10)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", e)

# ================================
# üî∞ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (–∞–Ω–∏–º–∞—Ü–∏—è)
# ================================
def send_dynamic(chat_id):
    """–ü–æ—à–∞–≥–æ–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º"""
    msg = None

    # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    first_step, pct = LOADING_STEPS[0]
    bar = make_progress_bar(pct)
    msg = requests.post(
        f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage",
        json={"chat_id": chat_id, "text": f"{first_step}\n{bar}"},
    ).json()

    message_id = msg.get("result", {}).get("message_id")

    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    for text, pct in LOADING_STEPS[1:]:
        time.sleep(1.5)
        bar = make_progress_bar(pct)
        try:
            requests.post(
                f"https://api.telegram.org/bot{BOT_TOKEN}/editMessageText",
                json={
                    "chat_id": chat_id,
                    "message_id": message_id,
                    "text": f"{text}\n{bar}" if pct < 100 else text,
                },
            )
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:", e)

    # ‚úÖ –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å SendPulse webhook
    print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è chat_id={chat_id}")
    # —Ç—É—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –≤ SendPulse API –∏–ª–∏ webhook:
    # requests.post("https://api.sendpulse.com/webhook/...", json={"chat_id": chat_id})

# ================================
# üî∞ Flask Webhook
# ================================
@app.route("/", methods=["GET"])
def home():
    return "OK", 200


@app.route("/webhook", methods=["POST"])
def webhook():
    data = request.get_json(force=True)
    print("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å:", data)

    chat_id = str(data.get("chat_id", "")).strip()

    if chat_id.isdigit():
        threading.Thread(target=send_dynamic, args=(int(chat_id),), daemon=True).start()
        return jsonify({"ok": True, "status": "dynamic message started"}), 200
    else:
        return jsonify({"ok": False, "error": "invalid chat_id"}), 400


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 5000)))
